//Program in C for the stack application to evaluate the suffix expression with single digit operands and operators
#include <stdio.h>
#include<stdlib.h>
#include<math.h>
#define MS 50
char postfix[50];
struct stack
{
    int top;
    int item[MS];
    
}s;
void push(int value)
{
    if(s.top==(MS-1))
    printf("Stack overflow");
    else
    s.item[++s.top]=value;
}
int pop()
{
    if(s.top==-1)
    printf("Stack underflow");
    else
    return(s.item[s.top--]);
}
int empty()
{
    if(s.top==-1)
    return 1;
    else
    return 0;
}
int operation(int a,int b,char c)
{
    switch(c)
    {
        case '+':return(a+b);
        case '-':return(a-b);
        case '*':return(a*b);
        case '/':return(a/b);
        case '%':return(a%b);
        case '^':return(a^b);
    }
   
}
int evaluate()
{
    char symb;
    int a,b,i,value,ans;
    for(i=0;postfix[i]!='\0';i++)
    {
       symb=postfix[i]; 
       if((symb>='0')&&(symb<='9'))
       {
       push((int)(symb-'0'));
       }
       else
       {
           a=pop();
           b=pop();
           value=operation(b,a,symb);
           push(value);
       }
    }
       ans=pop();
       return(ans);
    
}
void main()
{
    s.top=-1;
    int ans;
    printf("Enter the postfix expression: ");
    gets(postfix);
    ans=evaluate();
    printf("The resultant answer is: %d",ans);
     
}
